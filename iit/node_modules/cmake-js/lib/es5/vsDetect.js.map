{"version":3,"names":[],"mappings":"","sources":["vsDetect.js"],"sourcesContent":["\"use strict\";\nlet processHelpers = require(\"./processHelpers\");\nlet Bluebird = require(\"bluebird\");\nlet async = Bluebird.coroutine;\nlet _ = require(\"lodash\");\n\nlet vsDetect = {\n    isInstalled: async(function* (version) {\n        return (yield this._isVSInstalled(version)) || (yield this._isBuildToolsInstalled(version));\n    }),\n    _isBuildToolsInstalled: async(function*(version) {\n        let mainVer = version.split(\".\")[0];\n        let key = \"HKLM\\\\SOFTWARE\\\\Classes\\\\Installer\\\\Dependencies\\\\Microsoft.VS.VisualCppBuildTools_x86_enu,v\" + mainVer;\n        let command = \"reg query \\\"\" + key + \"\\\"\";\n        try {\n            let stdout = yield processHelpers.exec(command);\n            return stdout && stdout.indexOf(\"Visual C++\") > 0;\n        }\n        catch (e) {\n            _.noop(e);\n        }\n        return false;\n    }),\n    _isVSInstalled: async(function*(version) {\n        // On x64 this will look for x64 keys only, but if VS and compilers installed properly,\n        // it will write it's keys to 64 bit registry as well.\n        let command = \"reg query \\\"HKLM\\\\Software\\\\Microsoft\\\\VisualStudio\\\\\" + version + \"\\\"\";\n        try {\n            let stdout = yield processHelpers.exec(command);\n            if (stdout) {\n                let lines = stdout.split(\"\\r\\n\").filter(function (line) {\n                    return line.length > 10;\n                });\n                if (lines.length >= 4) {\n                    return true;\n                }\n            }\n        }\n        catch (e) {\n            _.noop(e);\n        }\n        return false;\n    })\n};\n\nmodule.exports = vsDetect;\n"],"file":"vsDetect.js","sourceRoot":"/source/"}